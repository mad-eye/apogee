<div class="container" id="docsContainer">
<h2>Docs</h2>
<hr />
<section>
  <h3>What is MadEye?</h3>
  <div>
    <p>MadEye lets you program collaboratively -- think Google Docs for code.
      MadEye syncs with a project on your file system, letting you and your
      teammates edit together in real-time. It incorporates the fully-featured
      Ace editor. An in-browser terminal allows you to run tests, tail logs,
      and run web servers. All this can be embedded in a Google Hangout.</p>

    <p>Installing MadEye is just one step.  After
      installing MadEye on your machine, you can create MadEye sessions by
      simply running <code>madeye</code> in a project directory.</p>
</div>


</section>
<section>

  <h3>How Does MadEye Work</h3>
  <div>
    <img id="howMadeyeWorks" src="/static/images/howMadEyeWorks.png" alt="How MadEye Works" />
  
    <p>MadEye works via a small daemon that runs on your system. This daemon
      communicates with the MadEye server. When a user opens a file in the webapp, a 
      request is sent to the daemon asking for the file contents. When a user saves
      a file in the webapp, the contents of the web editor are written to disk.
    </p>
    <p>When the madeye daemon is started with the <code>--terminal</code> flag,
    you are given a special prompt. Any input and output at this prmopt is mirrored to
    a read-only terminal present in the MadEye webapp.
    </p>
    <p>
      When madeye is started with the <code>--tunnel [PORT]</code> flag, an SSH tunnel
      is created from one of our public-facing servers to <code>PORT</code> on your local dev machine.
      This is useful when you want to share your local webserver with your teammates.
    </p>
  </div>

</section>
<section>

  <h3>Installing MadEye</h3>
  <div>
    <p>To install MadEye on Linux or Mac OS X, just type <code>curl https://madeye.io/install | sh</code> in your terminal.</p>
    <p>For Windows and SunOS systems, install the latest version of <a href="http://nodejs.org/">Node,js</a>.  Then install the
      <code>madeye</code> npm package with <code>npm install -g madeye</code>.  It's possible, depending on your setup, that you
      might need to use <code>sudo</code> to install <code>madeye</code> globally.
  </div>

</section>
<section>

  <h3>Command-line Options</h3>
  <div id="commandLineOptions">
  
    <div class="feature">
      <h4><code>--tunnel [port]</code></h4>
      <p>Create a tunnel from a random port on our publicly available server to
        your machine. This is especially useful for sharing a copy of your
        development server with your teammates.</p>
      <p>Example: <code>madeye --tunnel 8080</code></p>
    </div>

    <div class="feature">
      <h4><code>--terminal</code></h4>
      <img src="/static/images/browserTerminal.png" alt="In-browser terminal" />
      <p>Creates a special MadEye terminal in the host's shell. Anything displayed to the host will also be displayed
        in a web terminal inside the MadEye session. The web terminal is powered by <a href="https://github.com/chjj/tty.js">tty.js</a> so it can display commands like <code class="shortCmd">top</code> or even <code class="shortCmd">emacs</code>! The web terminal is <emphasis>read-only</emphasis>.
      </p>
      <p>Example: <code>madeye --terminal</code>.</p>
    </div>

    <div class="feature">
      <h4><code>--fullTerminal</code></h4>
      <p>Premium feature. This creates a fully capable web terminal within the MadEye
      session. Any user in the MadEye session is able to interact with the terminal and run commands
      against the host machine.
      </p>
      <p>Example: <code>madeye --fullTerminal</code></p>
    </div>

    <div class="feature">
      <h4><code>--ignorefile</code></h4>
      <p>Specify a .gitignore style file of patterns that you do not want to appear in your MadEye session.</p>
      <p>Example: <code>madeye --ignorefile .gitignore</code></p>
    </div>
  </div>

</section>
<section>

  <h3>Web Editor Features</h3>
  <div id="editorFeatures">
    <div class="feature">
      <h4>Keybindings</h4>
      <p>MadEye by default ships with the <a href="https://github.com/ajaxorg/ace/wiki/Default-Keyboard-ShortcutsIt">Ace keybindings</a>. It also supports VIM and Emacs modes for the power users out there.</p>
    </div>
  
    <div class="feature">
      <h4>Themes</h4>
      <img src="/static/images/themes.png" style="width:700px;"/>
    </div>
  
    <div class="feature">
      <h4>Persistent Preferences</h4>
      <p>We do our best to make sure preferences are saved from one sessino to another. Sign in with Google to key your settings off of your Google account.</p>
    </div>
  
    <div class="feature">
      <h4>Who's Where</h4>
      <img src="/static/images/whosWhere.png" alt="Showing who's where in the project" />
      <p> MadEye uses these colored squares to indicate where your teammates are within the project. You can click these squares to be teleported to your teammate's location.</p>
    </div>
  
    <div class="feature">
      <h4>Autocomplete</h4>
      <p>Autocomplete is activated by pressing [ctrl-space].</p>
    </div>
  
    <div class="feature">
      <h4>Snippets</h4>
      <p>Snippets can be activated from the options menu. Once activated, snippets are used by pressing the Tab key. For example <code>for&lt;TAB&gt;</code> will expand to
      </p>
  
      <pre><code>for (var i = 0; i < Things.length; i++) {
    Things[i]
}</code></pre>
    </div>
  
    <div class="feature">
      <h4>Scratch Projects</h4>
      <p>If you want to try out Madeye, but aren't quite ready to install the daemon on your system, you can try out the editor with a <a href="https://madeye.io/scratch">scratch project</a>. Scratch projects are not backed by a file system so the project will not be persisted, but they can be a great way to quickly collaborate with someone on a snippet of code.</p>
    </div>
  </div>
  </div>

</section>
